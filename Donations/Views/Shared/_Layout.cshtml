@using Donations.Database
@using Donations.Entities.Medical
@using Donations.Entities.User
@using Donations.Services
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.EntityFrameworkCore
@* // "Shared" views like _Layout don't have controllers, so we have to use a special @inject directive to get services and access our database or other application state objects: *@
@inject UserManager<User> UserManager
@inject DonorStatusService DonorStatusService
@inject ApplicationDbContext dbContext

@{
    var currentUser = await UserManager.GetUserAsync(User);
    var currentPath = Context.Request.Path.Value?.ToLower() ?? "";
    var isTopLevelPage = currentPath == "/donordashboard" ||
    currentPath == "/donordashboard/index" ||
    currentPath == "/centerdashboard" ||
    currentPath == "/centerdashboard/index" ||
    currentPath == "/donordashboard/notifications" ||
    currentPath == "/donordashboard/profileoptions" ||
    currentPath == "/donordashboard/centers";
    DonorStatusViewModel? donorStatus = null;

    if (currentUser?.Donor != null)
    {
        var (nextAppointment, eligibleFrom, isEligible) = await DonorStatusService.GetDonorStatus(currentUser.Donor.Id);
        donorStatus = new DonorStatusViewModel
                {
                    NextAppointment = nextAppointment,
                    EligibleFrom = eligibleFrom,
                    IsEligible = isEligible
                };
    }
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Donations</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Donations.styles.css" asp-append-version="true" />
</head>

<body>
    @{
        var isPublicPage = Context.Request.Path.Value?.StartsWith("/Home") == true ||
        Context.Request.Path.Value?.StartsWith("/Login") == true ||
        Context.Request.Path.Value?.StartsWith("/Register") == true;
        var isDonor = User.IsInRole(Roles.Donor) && currentUser?.Donor != null;
        var isDonationCenter = User.IsInRole(Roles.DonationCenter) && currentUser?.DonationCenter != null;
        var isDashboard = Context.Request.Path.Value?.StartsWith("/DonorDashboard") == true ||
        Context.Request.Path.Value?.StartsWith("/CenterDashboard") == true;
    }

    @if (isDashboard && !isPublicPage)
    {
        @if (isDonor)
        {
            <div class="bg-danger text-white p-4 mb-4">
                <div class="container">
                    <div class="row align-items-center">
                        <div class="col-6 d-flex align-items-center">
                            <div class="me-3">
                                <i class="fas fa-user fa-2x"></i>
                            </div>
                            <div class="text-start">
                                <div class="fw-bold">@currentUser!.FullName (@currentUser!.Donor!.BloodType.ToHumanReadableString())</div>
                                <div class="small">@currentUser!.Donor!.Points points</div>
                            </div>
                        </div>
                        <div class="col-6 d-flex align-items-center">
                            <div class="me-3">
                                <i class="fas fa-calendar fa-2x"></i>
                            </div>
                            <div class="text-start">
                                @if (donorStatus?.NextAppointment != null)
                                {
                                    var daysUntilAppointment = (donorStatus.NextAppointment.Value - DateTime.Today).Days;
                                    <div class="fw-bold">Next: @donorStatus.NextAppointment.Value.ToString("MMM d")</div>
                                    <div class="small">@daysUntilAppointment days until appointment</div>
                                }
                                else if (!donorStatus?.IsEligible ?? false)
                                {
                                    <div class="fw-bold text-warning">Not eligible</div>
                                    <div class="small">@((donorStatus?.EligibleFrom?.Subtract(DateTime.Today).Days ?? 0)) days remaining</div>
                                }
                                else
                                {
                                    <div class="fw-bold text-white">Eligible to donate</div>
                                    <div class="small">No appointments</div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        @if (isDonationCenter)
        {
            <div class="bg-danger text-white p-2 mb-4">
                <div class="container">
                    <div class="row align-items-center">
                        <div class="col-6 d-flex align-items-center">
                            <div class="me-3">
                                <i class="fas fa-hospital fa-2x"></i>
                            </div>
                            <div class="text-start">
                                <div class="fw-bold">@currentUser!.DonationCenter!.Name</div>
                                <div class="small">@currentUser!.DonationCenter!.Location.Name</div>
                            </div>
                        </div>
                        <div class="col-6 d-flex align-items-center justify-content-end">
                            <div class="me-3">
                                <i class="fas fa-users fa-2x"></i>
                            </div>
                            <div class="text-start">
                                <div class="fw-bold">@(await dbContext.Donors.CountAsync())</div>
                                <div class="small">Total Donors</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }

    <div class="container mb-5 pt-3">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    @if (!isPublicPage && isTopLevelPage)
    {
        <nav class="navbar fixed-bottom navbar-light bg-white border-top"
            style="padding-bottom: calc(0.5rem + env(safe-area-inset-bottom));">
            <div class="container-fluid justify-content-center position-relative">
                @if (isDonationCenter)
                {
                    <div class="d-flex align-items-center">
                        <a href="/CenterDashboard/Index" 
                           class="btn btn-link text-danger @(currentPath.StartsWith("/centerdashboard") && !currentPath.Contains("/pendingrequests") ? "nav-active" : "")">
                            <i class="fas fa-home fa-lg"></i>
                        </a>
                    </div>
                    <form method="post" action="/Login/Logout" class="position-absolute end-0">
                        <button type="submit" class="btn btn-link text-danger">
                            <i class="fas fa-sign-out-alt fa-lg"></i>
                        </button>
                    </form>
                }
                @if (isDonor)
                {
                    <div class="d-flex justify-content-around" style="width: 100%; max-width: 400px;">
                        <a href="/DonorDashboard/Index"
                            class="btn btn-link text-danger @(currentPath == "/donordashboard/index" ? "nav-active" : "")">
                            <i class="fas fa-home fa-lg"></i>
                        </a>
                        <a href="/DonorDashboard/Centers"
                            class="btn btn-link text-danger @(currentPath == "/donordashboard/centers" ? "nav-active" : "")">
                            <i class="fas fa-map-marker-alt fa-lg"></i>
                        </a>
                        <a href="/DonorDashboard/Notifications"
                            class="btn btn-link text-danger position-relative @(currentPath == "/donordashboard/notifications" ? "nav-active" : "")">
                            <i class="fas fa-bell fa-lg"></i>
                            <span id="notificationCount"
                                class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger"
                                style="display: none;">
                            </span>
                        </a>
                        <a href="/DonorDashboard/ProfileOptions"
                            class="btn btn-link text-danger @(currentPath == "/donordashboard/profileoptions" ? "nav-active" : "")">
                            <i class="fas fa-user fa-lg"></i>
                        </a>
                    </div>
                }
            </div>
        </nav>
    }

    <style>
        .bg-danger {
            background-color: #b02a37 !important;
        }

        .nav-active {
            position: relative;
        }

        .nav-active::after {
            content: '';
            position: absolute;
            bottom: -0.5rem;
            left: 50%;
            transform: translateX(-50%);
            width: 5px;
            height: 5px;
            border-radius: 50%;
            background-color: #dc3545;
        }

        .nav-active i {
            transform: scale(1.1);
            transition: transform 0.2s ease;
        }
    </style>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @if (isDonor)
    {
        <script>
            function updateNotificationCount() {
                fetch('/DonorDashboard/UnreadNotificationCount')
                    .then(response => response.json())
                    .then(count => {
                        const badge = document.getElementById('notificationCount');
                        if (count > 0) {
                            badge.textContent = count;
                            badge.style.display = 'block';
                        } else {
                            badge.style.display = 'none';
                        }
                    });
            }

            // Update on page load
            updateNotificationCount();
            // Update every 30 seconds
            setInterval(updateNotificationCount, 30000);
        </script>
    }
    @await RenderSectionAsync("Scripts", required: false)
</body>

</html>